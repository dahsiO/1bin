public class CercleDansLePlan {

    // ğŸ”¹ Attributs
    private double rayon;
    private Point centre;

    // ğŸ”¹ Constructeur 1 : rayon + centre
    public CercleDansLePlan(double rayon, Point centre) {
        this.rayon = rayon;
        this.centre = centre;
    }

    // ğŸ”¹ Constructeur 2 : seulement le centre â†’ rayon par dÃ©faut = 1
    public CercleDansLePlan(Point centre) {
        this.rayon = 1.0;
        this.centre = centre;
    }

    // ğŸ”¹ Constructeur 3 : aucun paramÃ¨tre â†’ rayon = 1 et centre = (0,0)
    public CercleDansLePlan() {
        this.rayon = 1.0;
        this.centre = new Point(0, 0);
    }

    // ğŸ”¹ Getter pour le rayon
    public double getRayon() {
        return rayon;
    }

    // ğŸ”¹ Setter pour le rayon
    public void setRayon(double rayon) {
        this.rayon = rayon;
    }

    // ğŸ”¹ Getter pour le centre
    public Point getCentre() {
        return centre;
    }

    // ğŸ”¹ Setter pour le centre
    public void setCentre(Point centre) {
        this.centre = centre;
    }

    // ğŸ”¹ toString() pour afficher les infos du cercle
    @Override
    public String toString() {
        return "Cercle de rayon " + rayon + " centrÃ© en " + centre;
    }
}
/*
*Explication rapide :

Surcharge â†’ les 3 constructeurs permettent de crÃ©er un cercle de plusieurs faÃ§ons.

On rÃ©utilise la classe Point pour le centre.

toString() appelle automatiquement centre.toString() â†’ ce qui affichera (x,y).

* */